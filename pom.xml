<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>adona65</groupId>
	<artifactId>collection_manager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<name>collection_manager</name>
	<description>Manage your collections easily (coins, stamps, disks, whatsoever).</description>
	
	<properties>
		<java.version>17</java.version>
	</properties>
	
	<dependencies>
		<!-- Allow Spring Boot to automatically reload files on the classpath. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<!-- Commented for allowing very basic "Hello World" application to works whitout further configurations.
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		-->
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- 
				Installing npm is fraught with issues, including but not limited to how to get it working as part of your 
				build automation. We are going to use the excellent Maven Frontend Plugin from Eirik Sletteberg. 
				
				Then execute :
					./mvnw generate-resources
					ls node*
			-->
			<!-- 
				For easing developpement and decoupling front from back, we won't use the pluggin anymore. Angular's front will
				be launch and deploy in is own way.
			-->
			<!--
			<plugin>
	            <groupId>com.github.eirslett</groupId>
	            <artifactId>frontend-maven-plugin</artifactId>
	            <version>1.12.0</version>
	            <configuration>
	                <nodeVersion>v16.13.1</nodeVersion>
	            </configuration>
	            <executions>
	                <execution>
	                    <id>install-npm</id>
	                    <goals>
	                        <goal>install-node-and-npm</goal>
	                    </goals>
	                </execution>
	                <execution>
					    <id>npm-install</id>
					    <goals>
					        <goal>npm</goal>
					    </goals>
					</execution>
					<execution>
				        <id>npm-build</id>
				        <goals>
				            <goal>npm</goal>
				        </goals>
				        <configuration>
				            <arguments>run-script build</arguments>
				        </configuration>
				    </execution>
	            </executions>
	        </plugin>
	        -->
		</plugins>
	</build>
	
</project>
